const fetch = require('node-fetch');
const fs = require('fs');
const FormData = require('form-data');

async function testPdfConversion() {
  const LIBREE_URL = 'https://libre-vljo.onrender.com';
  
  console.log('Testing PDF to Word conversion...');
  
  try {
    // Create a simple test PDF file
    const testPdfPath = './test.pdf';
    
    // Create a minimal PDF file for testing
    const pdfContent = Buffer.from([
      0x25, 0x50, 0x44, 0x46, 0x2D, 0x31, 0x2E, 0x34, 0x0A, 0x25, 0xE2, 0xE3, 0xCF, 0xD3, 0x0A,
      0x31, 0x20, 0x30, 0x20, 0x6F, 0x62, 0x6A, 0x0A, 0x3C, 0x3C, 0x2F, 0x54, 0x79, 0x70, 0x65,
      0x20, 0x2F, 0x43, 0x61, 0x74, 0x61, 0x6C, 0x6F, 0x67, 0x20, 0x2F, 0x50, 0x61, 0x67, 0x65,
      0x73, 0x20, 0x32, 0x20, 0x30, 0x20, 0x52, 0x20, 0x2F, 0x4D, 0x65, 0x74, 0x61, 0x64, 0x61,
      0x74, 0x61, 0x20, 0x33, 0x20, 0x30, 0x20, 0x52, 0x3E, 0x3E, 0x0A, 0x65, 0x6E, 0x64, 0x6F,
      0x62, 0x6A, 0x0A, 0x32, 0x20, 0x30, 0x20, 0x6F, 0x62, 0x6A, 0x0A, 0x3C, 0x3C, 0x2F, 0x54,
      0x79, 0x70, 0x65, 0x20, 0x2F, 0x50, 0x61, 0x67, 0x65, 0x73, 0x20, 0x2F, 0x4B, 0x69, 0x64,
      0x73, 0x20, 0x5B, 0x34, 0x20, 0x30, 0x20, 0x52, 0x5D, 0x20, 0x2F, 0x43, 0x6F, 0x75, 0x6E,
      0x74, 0x20, 0x31, 0x3E, 0x3E, 0x0A, 0x65, 0x6E, 0x64, 0x6F, 0x62, 0x6A, 0x0A, 0x33, 0x20,
      0x30, 0x20, 0x6F, 0x62, 0x6A, 0x0A, 0x3C, 0x3C, 0x2F, 0x54, 0x79, 0x70, 0x65, 0x20, 0x2F,
      0x4D, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x2F, 0x53, 0x75, 0x62, 0x74, 0x79,
      0x70, 0x65, 0x20, 0x2F, 0x58, 0x4D, 0x4C, 0x20, 0x2F, 0x4C, 0x65, 0x6E, 0x67, 0x74, 0x68,
      0x20, 0x31, 0x33, 0x34, 0x3E, 0x3E, 0x0A, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D, 0x0A, 0x3C,
      0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x22, 0x31,
      0x2E, 0x30, 0x22, 0x20, 0x65, 0x6E, 0x63, 0x6F, 0x64, 0x69, 0x6E, 0x67, 0x3D, 0x22, 0x55,
      0x54, 0x46, 0x2D, 0x38, 0x22, 0x3F, 0x3E, 0x0A, 0x3C, 0x78, 0x3A, 0x78, 0x6D, 0x70, 0x6D,
      0x65, 0x74, 0x61, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x78, 0x3D, 0x22, 0x61, 0x64,
      0x6F, 0x62, 0x65, 0x3A, 0x6E, 0x73, 0x3A, 0x6D, 0x65, 0x74, 0x61, 0x2F, 0x22, 0x20, 0x78,
      0x3A, 0x78, 0x6D, 0x70, 0x74, 0x6B, 0x3D, 0x22, 0x41, 0x64, 0x6F, 0x62, 0x65, 0x20, 0x58,
      0x4D, 0x50, 0x20, 0x43, 0x6F, 0x72, 0x65, 0x20, 0x35, 0x2E, 0x30, 0x2D, 0x63, 0x30, 0x31,
      0x31, 0x20, 0x34, 0x2E, 0x31, 0x2E, 0x32, 0x30, 0x30, 0x34, 0x30, 0x37, 0x32, 0x33, 0x30,
      0x30, 0x22, 0x3E, 0x0A, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x52, 0x44, 0x46, 0x20, 0x78, 0x6D,
      0x6C, 0x6E, 0x73, 0x3A, 0x72, 0x64, 0x66, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F,
      0x2F, 0x77, 0x77, 0x77, 0x2E, 0x77, 0x33, 0x2E, 0x6F, 0x72, 0x67, 0x2F, 0x31, 0x39, 0x39,
      0x39, 0x2F, 0x30, 0x32, 0x2F, 0x32, 0x32, 0x2D, 0x72, 0x64, 0x66, 0x2D, 0x73, 0x79, 0x6E,
      0x74, 0x61, 0x78, 0x2D, 0x6E, 0x73, 0x23, 0x22, 0x3E, 0x0A, 0x3C, 0x72, 0x64, 0x66, 0x3A,
      0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x72, 0x64, 0x66,
      0x3A, 0x61, 0x62, 0x6F, 0x75, 0x74, 0x3D, 0x22, 0x22, 0x2F, 0x3E, 0x0A, 0x3C, 0x2F, 0x72,
      0x64, 0x66, 0x3A, 0x52, 0x44, 0x46, 0x3E, 0x0A, 0x3C, 0x2F, 0x78, 0x3A, 0x78, 0x6D, 0x70,
      0x6D, 0x65, 0x74, 0x61, 0x3E, 0x0A, 0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D,
      0x0A, 0x65, 0x6E, 0x64, 0x6F, 0x62, 0x6A, 0x0A, 0x34, 0x20, 0x30, 0x20, 0x6F, 0x62, 0x6A,
      0x0A, 0x3C, 0x3C, 0x2F, 0x54, 0x79, 0x70, 0x65, 0x20, 0x2F, 0x50, 0x61, 0x67, 0x65, 0x20,
      0x2F, 0x50, 0x61, 0x72, 0x65, 0x6E, 0x74, 0x20, 0x32, 0x20, 0x30, 0x20, 0x52, 0x20, 0x2F,
      0x4D, 0x65, 0x64, 0x69, 0x61, 0x42, 0x6F, 0x78, 0x20, 0x5B, 0x30, 0x20, 0x30, 0x20, 0x36,
      0x31, 0x32, 0x20, 0x37, 0x39, 0x32, 0x5D, 0x20, 0x2F, 0x43, 0x6F, 0x6E, 0x74, 0x65, 0x6E,
      0x74, 0x73, 0x20, 0x35, 0x20, 0x30, 0x20, 0x52, 0x20, 0x2F, 0x52, 0x65, 0x73, 0x6F, 0x75,
      0x72, 0x63, 0x65, 0x73, 0x20, 0x36, 0x20, 0x30, 0x20, 0x52, 0x3E, 0x3E, 0x0A, 0x65, 0x6E,
      0x64, 0x6F, 0x62, 0x6A, 0x0A, 0x35, 0x20, 0x30, 0x20, 0x6F, 0x62, 0x6A, 0x0A, 0x3C, 0x3C,
      0x2F, 0x4C, 0x65, 0x6E, 0x67, 0x74, 0x68, 0x20, 0x31, 0x3E, 0x3E, 0x0A, 0x73, 0x74, 0x72,
      0x65, 0x61, 0x6D, 0x0A, 0x20, 0x0A, 0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D,
      0x0A, 0x65, 0x6E, 0x64, 0x6F, 0x62, 0x6A, 0x0A, 0x36, 0x20, 0x30, 0x20, 0x6F, 0x62, 0x6A,
      0x0A, 0x3C, 0x3C, 0x2F, 0x50, 0x72, 0x6F, 0x63, 0x53, 0x65, 0x74, 0x20, 0x5B, 0x2F, 0x50,
      0x44, 0x46, 0x20, 0x2F, 0x54, 0x65, 0x78, 0x74, 0x5D, 0x3E, 0x3E, 0x0A, 0x65, 0x6E, 0x64,
      0x6F, 0x62, 0x6A, 0x0A, 0x78, 0x72, 0x65, 0x66, 0x0A, 0x30, 0x20, 0x37, 0x0A, 0x30, 0x30,
      0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x20, 0x36, 0x35, 0x35, 0x33, 0x35, 0x20, 0x66,
      0x0A, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x20, 0x30, 0x30, 0x30, 0x30,
      0x30, 0x20, 0x6E, 0x0A, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x20, 0x30,
      0x30, 0x30, 0x30, 0x30, 0x20, 0x6E, 0x0A, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
      0x33, 0x20, 0x30, 0x30, 0x30, 0x30, 0x30, 0x20, 0x6E, 0x0A, 0x30, 0x30, 0x30, 0x30, 0x30,
      0x30, 0x30, 0x30, 0x34, 0x20, 0x30, 0x30, 0x30, 0x30, 0x30, 0x20, 0x6E, 0x0A, 0x30, 0x30,
      0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x20, 0x30, 0x30, 0x30, 0x30, 0x30, 0x20, 0x6E,
      0x0A, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x36, 0x20, 0x30, 0x30, 0x30, 0x30,
      0x30, 0x20, 0x6E, 0x0A, 0x74, 0x72, 0x61, 0x69, 0x6C, 0x65, 0x72, 0x0A, 0x3C, 0x3C, 0x2F,
      0x53, 0x69, 0x7A, 0x65, 0x20, 0x37, 0x20, 0x2F, 0x52, 0x6F, 0x6F, 0x74, 0x20, 0x31, 0x20,
      0x30, 0x20, 0x52, 0x3E, 0x3E, 0x0A, 0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66,
      0x0A, 0x33, 0x37, 0x35, 0x0A, 0x25, 0x25, 0x45, 0x4F, 0x46, 0x0A
    ]);
    
    fs.writeFileSync(testPdfPath, pdfContent);
    console.log('Created test PDF file');
    
    // Create form data
    const formData = new FormData();
    formData.append('file', fs.createReadStream(testPdfPath), 'test.pdf');
    formData.append('quality', 'standard');
    
    console.log('Sending request to convert PDF to Word...');
    
    const response = await fetch(`${LIBREE_URL}/convert-pdf-to-word`, {
      method: 'POST',
      body: formData,
      headers: {
        'Origin': 'https://novenutility123.netlify.app'
      }
    });
    
    console.log('Response status:', response.status);
    console.log('Response headers:', Object.fromEntries(response.headers.entries()));
    
    if (response.ok) {
      const blob = await response.blob();
      console.log('Response blob size:', blob.size);
      
      if (blob.size > 0) {
        // Save the response to a file
        const buffer = await blob.arrayBuffer();
        fs.writeFileSync('./converted.docx', Buffer.from(buffer));
        console.log('Successfully converted PDF to Word!');
        console.log('Saved as: converted.docx');
      } else {
        console.log('Response blob is empty');
      }
    } else {
      const errorText = await response.text();
      console.log('Error response:', errorText);
    }
    
    // Clean up test file
    fs.unlinkSync(testPdfPath);
    
  } catch (error) {
    console.error('Test failed:', error.message);
  }
}

testPdfConversion();
